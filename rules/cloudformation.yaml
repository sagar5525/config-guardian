# rules/cloudformation.yaml
rules:
  - id: "CFN-001"
    name: "S3 Bucket Public Access Allowed (YAML)"
    description: "A CloudFormation S3 bucket allows public read or write access via ACL."
    type: "key"
    # Path in CloudFormation YAML structure
    key: "Resources.*.Properties.AccessControl"
    value: "PublicRead" # Or "PublicReadWrite"
    severity: "High"
    remediation: "Set Properties.AccessControl to 'Private' or remove it to use default. Use Bucket Policies for access control."
    reference: "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-accesscontrol"

  - id: "CFN-002"
    name: "Security Group Allows All Ingress (YAML)"
    description: "A CloudFormation security group rule allows ingress from any IP address (0.0.0.0/0)."
    type: "key"
    key: "Resources.*.Properties.SecurityGroupIngress.*.CidrIp"
    value: "0.0.0.0/0"
    severity: "High"
    remediation: "Restrict the 'CidrIp' in the SecurityGroupIngress rule to specific, trusted IP addresses."
    reference: "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip"

  - id: "CFN-003"
    name: "Hardcoded Secrets in Parameters"
    description: "Default values for parameters might contain hardcoded secrets."
    type: "key"
    key: "Parameters.*.Default" # Gets default values
    # This is a very basic check. Real checks need regex on the value.
    # Let's use a regex rule for this.
    condition: "exists"
    severity: "High"
    remediation: "Do not provide default values for sensitive parameters like passwords or keys. Use AWS Systems Manager Parameter Store or Secrets Manager."
    reference: "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html"

# --- Regex-based rules for CloudFormation (checking raw file content) ---
  - id: "CFN-REGEX-001"
    name: "Hardcoded Secrets in CFN Files (Regex)"
    description: "Potential hardcoded secrets detected using pattern matching in CloudFormation files."
    type: "regex"
    # Using a literal scalar (|) for the complex regex to prevent YAML parsing errors
    # Original intended regex (simplified):
    # (["']?(password|secret|key)["']?\s*:\s*["'][^"']{4,}["'])|("AccessKey"\s*:\s*"[A-Z0-9]{20}")
    # YAML Literal Block Scalar:
    regex: |
      (["']?(password|secret|key)["']?\s*:\s*["'][^"']{4,}["'])|("AccessKey"\s*:\s*"[A-Z0-9]{20}")
    severity: "High"
    remediation: "Remove hardcoded secrets. Use Parameters without defaults, SSM, or Secrets Manager."
    reference: "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/best-practices.html#creds"
