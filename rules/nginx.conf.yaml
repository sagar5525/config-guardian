# rules/nginx.conf.yaml

rules:
  - id: "NGINX-001"
    name: "Server Tokens Enabled"
    description: "Nginx version is exposed in Server header."
    type: "regex"
    regex: 'server_tokens\s+on;'
    severity: "Low"
    remediation: "Set server_tokens off; to hide version."
    reference: "https://nginx.org/en/docs/http/ngx_http_core_module.html#server_tokens"

  - id: "NGINX-002"
    name: "Missing Security Headers"
    description: "Critical security headers not set (X-Frame-Options, X-Content-Type-Options)."
    type: "regex"
    regex: 'add_header'
    condition: "not(exists)"
    severity: "Medium"
    remediation: "Add: add_header X-Frame-Options DENY; add_header X-Content-Type-Options nosniff;"
    reference: "https://owasp.org/www-project-secure-headers/"

  - id: "NGINX-003"
    name: "SSLv3 or TLSv1 Enabled"
    description: "Outdated SSL/TLS protocols enabled, vulnerable to POODLE, BEAST."
    type: "regex"
    regex: 'ssl_protocols'
    value: 'SSLv3|TLSv1'
    severity: "High"
    remediation: "Use ssl_protocols TLSv1.2 TLSv1.3;"
    reference: "https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html"

  - id: "NGINX-004"
    name: "Weak SSL Ciphers"
    description: "Insecure ciphers (e.g., CBC, RC4) enabled."
    type: "regex"
    regex: 'ssl_ciphers'
    value: 'RC4|CBC|3DES'
    severity: "High"
    remediation: "Use strong ciphers: ECDHE-RSA-AES256-GCM-SHA384"
    reference: "https://cipherli.st/"

  - id: "NGINX-005"
    name: "Client Body Too Large"
    description: "Large client body allowed, risking DoS via large uploads."
    type: "regex"
    regex: 'client_max_body_size'
    value: '10M|0'
    severity: "Medium"
    remediation: "Set client_max_body_size 1m; unless large uploads are needed."
    reference: "https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size"

  - id: "NGINX-006"
    name: "Autoindex Enabled"
    description: "Directory listing enabled via autoindex on;"
    type: "regex"
    regex: 'autoindex\s+on;'
    severity: "Medium"
    remediation: "Set autoindex off; to prevent directory browsing."
    reference: "https://nginx.org/en/docs/http/ngx_http_autoindex_module.html"

  - id: "NGINX-007"
    name: "HTTP to HTTPS Redirect Missing"
    description: "No redirect from HTTP to HTTPS, risking plaintext exposure."
    type: "regex"
    regex: 'return\s+301\s+https://'
    condition: "not(exists)"
    severity: "High"
    remediation: "Add redirect: return 301 https://$host$request_uri;"
    reference: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security"

  - id: "NGINX-008"
    name: "HSTS Not Enabled"
    description: "HTTP Strict Transport Security (HSTS) not configured."
    type: "regex"
    regex: 'add_header'
    value: 'Strict-Transport-Security'
    condition: "not(exists)"
    severity: "Medium"
    remediation: "Add: add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';"
    reference: "https://owasp.org/www-project-secure-headers/#hsts"
